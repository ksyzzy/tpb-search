{"version":3,"sources":["components/Header.js","actions/actions.js","components/Menu.js","components/App.js","components/Footer.js","components/History.js","logic/tpbConnection.js","components/Result.js","serviceWorker.js","actions/reducers.js","index.js"],"names":["Header","className","this","props","theme","React","Component","connect","state","checkResult","result","type","gotResult","updateResult","text","Menu","toggleMenu","sidebar","document","getElementsByClassName","openbtn","sidemenuOpen","style","width","marginLeft","closeSidemenu","openSidemenu","toggleTheme","toggleDarkTheme","body","id","toggleLightTheme","to","onClick","bind","dispatch","App","event","updateInput","target","value","setAjaxRequest","preventDefault","history","push","onSubmit","submitForm","htmlFor","name","input","onChange","handleInputChange","required","checked","connection","setImdbRequest","setNodeRequest","withRouter","Footer","History","console","log","listHistory","map","elem","index","key","item","toString","length","ajaxSearch","title","a","fetch","proxyurl","response","json","alert","imdbHelper","imdbId","require","Promise","resolve","reject","imdbSearch","nodeSearch","URLSearchParams","Result","appendToHistory","error","Boolean","window","location","hostname","match","appReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6fedd45b.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport './styles/Header.css';\n\nexport class Header extends React.Component {\n    render() {\n      return (\n        <div className={`Header-component ${this.props.theme}`}>\n          <header>\n            Simple TPB Movie Search Application\n          <hr />\n          </header>\n        </div>\n      );\n    };\n};\n\nconst mapStateToProps = (state) => ({\n    theme: state.theme\n});\n\nexport default connect(mapStateToProps, null)(Header);\n","export const TOGGLE_THEME = 'TOGGLE_THEME';\nexport const SET_AJAX_REQUEST = 'SET_AJAX_REQUEST';\nexport const SET_IMDB_REQUEST = 'SET_IMDB_REQUEST';\nexport const SET_NODE_REQUEST = 'SET_NODE_REQUEST';\nexport const UPDATE_INPUT = 'UPDATE_INPUT';\nexport const TOGGLE_SIDEMENU = 'TOGGLE_SIDEMENU';\nexport const UPDATE_HISTORY = 'UPDATE_HISTORY';\nexport const REQUEST = \"REQUEST\";\nexport const UPDATE_RESULT = \"UPDATE_RESULT\";\n\nexport function toggleLightTheme() {\n    return { type: TOGGLE_THEME, theme: 'theme1' };\n};\n\nexport function toggleDarkTheme() {\n    return { type: TOGGLE_THEME, theme: 'theme2' };\n};\n\nexport function setAjaxRequest() {\n    return { type: SET_AJAX_REQUEST, connection: 'ajax' };\n};\n\nexport function setImdbRequest() {\n    return { type: SET_IMDB_REQUEST, connection: 'imdb' };\n};\n\nexport function setNodeRequest() {\n    return { type: SET_NODE_REQUEST, connection: 'node' };\n};\n\nexport function updateInput(text) {\n    return { type: UPDATE_INPUT, input: text };\n};\n\nexport function openSidemenu() {\n    return { type: TOGGLE_SIDEMENU, sidemenuOpen: true };\n};\n\nexport function closeSidemenu() {\n    return { type: TOGGLE_SIDEMENU, sidemenuOpen: false };\n};\n\nexport function appendToHistory(title, connection, result) {\n    return { type: UPDATE_HISTORY, item: {title, connection, result} };\n};\n\nexport function checkResult(result) {\n    return { type: REQUEST, gotResult: result};\n};\n\nexport function updateResult(text) {\n    return { type: UPDATE_RESULT, result : text };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toggleLightTheme, toggleDarkTheme, openSidemenu, closeSidemenu } from '../actions/actions';\nimport './styles/Menu.css';\n\nexport class Menu extends React.Component {\n    toggleMenu = () => {\n        let sidebar = document.getElementsByClassName(\"sidebar\")[0];\n        let openbtn = document.getElementsByClassName(\"openbtn\")[0];\n        switch(this.props.sidemenuOpen) {\n            case true:\n                sidebar.style.width = \"0%\";\n                openbtn.style.marginLeft = \"0%\";\n                this.props.closeSidemenu();\n                break;\n            case false:\n                sidebar.style.width = \"20%\";\n                openbtn.style.marginLeft = \"20%\";\n                this.props.openSidemenu();\n                break;\n            default:\n                break;\n        }\n    };\n    \n    toggleTheme = () => {\n        switch(this.props.theme) {\n            case \"theme1\":\n                this.props.toggleDarkTheme();\n                document.body.id = \"theme2\";\n                break;\n            case \"theme2\":\n                this.props.toggleLightTheme();\n                document.body.id = \"theme1\";\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n      return (\n        <div className={`Menu-component ${this.props.theme}`}>\n          <div className=\"colorbar\">\n          </div>\n            <div className=\"sidebar\">\n                <nav>\n                    <Link to=\"/\">Homepage</Link>\n                    <Link to=\"/history\">Search history</Link>\n                </nav>\n                <button className=\"themebtn\" onClick={this.toggleTheme.bind(this)}>{this.props.theme === \"theme1\" ? \"Dark Theme\" : \"Light Theme\"}</button>\n            </div>\n            <div className=\"Menu-button\">\n                <button className=\"openbtn\" onClick={this.toggleMenu.bind(this)}>&#9776;</button>\n            </div>\n        </div>\n      );\n    };\n};\n\nconst mapStateToProps = (state) => ({\n    theme: state.theme,\n    sidemenuOpen: state.sidemenuOpen,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    openSidemenu: () => dispatch(openSidemenu()),\n    closeSidemenu: () => dispatch(closeSidemenu()),\n    toggleLightTheme: () => dispatch(toggleLightTheme()),\n    toggleDarkTheme: () => dispatch(toggleDarkTheme())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport './styles/App.css';\nimport { setAjaxRequest, setImdbRequest, setNodeRequest, updateInput, checkResult, updateResult } from '../actions/actions.js';\n\nexport class App extends React.Component {\n    handleInputChange(event) {\n        this.props.updateInput(event.target.value)\n    };\n    \n    componentDidMount() {\n        document.body.id = this.props.theme;\n        this.props.updateInput(\"\");\n        this.props.setAjaxRequest();\n        this.props.checkResult(false);\n        this.props.updateResult(null);\n    };\n\n    submitForm(event) {\n        event.preventDefault();\n        this.props.history.push('/result');\n    };\n    render() {\n      return (\n        <div className={`App ${this.props.theme}`}>\n          <form onSubmit={this.submitForm.bind(this)}>\n            <label htmlFor=\"input\">Movie title:</label>\n            <input id=\"input\" type=\"text\" name=\"movietitle\" value={this.props.input} onChange={this.handleInputChange.bind(this)} required></input>\n          <div className=\"radios\">\n                <label id=\"connectionTitle\">Connection type:</label>\n                <div className=\"item\">\n                    <label htmlFor=\"ajax\" className=\"radioLabel\">AJAX</label>\n                    <input type=\"radio\" id=\"ajax\" name=\"connectionType\" value=\"ajax\" onChange={this.props.setAjaxRequest} checked={this.props.connection === 'ajax'}></input>\n                </div>\n                <div className=\"item\">\n                    <label htmlFor=\"imdb\" className=\"radioLabel\">AJAX + IMDB ID</label>\n                    <input type=\"radio\" id=\"imdb\" name=\"connectionType\" value=\"imdb\" onChange={this.props.setImdbRequest} checked={this.props.connection === 'imdb'}></input>\n                </div>\n                <div className=\"item\">\n                    <label htmlFor=\"node\" className=\"radioLabel\">NODE.js + IMDB ID</label>\n                    <input type=\"radio\" id=\"node\" name=\"connectionType\" value=\"node\" onChange={this.props.setNodeRequest} checked={this.props.connection === 'node'}></input>\n                </div>\n            </div>\n            <input id=\"submitbtn\" type=\"submit\" value=\"Search\"></input>\n          </form>\n        </div>\n      );\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        input: state.input,\n        connection: state.connection,\n        theme: state.theme,\n        result: state.result,\n        gotResult: state.gotResult\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    setAjaxRequest: () => dispatch(setAjaxRequest()),\n    setImdbRequest: () => dispatch(setImdbRequest()),\n    setNodeRequest: () => dispatch(setNodeRequest()),\n    updateInput: (input) => dispatch(updateInput(input)),\n    checkResult: (value) => dispatch(checkResult(value)),\n    updateResult: (result) => dispatch(updateResult(result))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './styles/Footer.css';\n\nexport class Footer extends React.Component {\n    render() {\n        return (\n            <div className={`Footer-component ${this.props.theme}`}>\n                <footer>\n                    <hr />\n                    Made by kushiji with React 2020\n                </footer>\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    theme: state.theme\n});\n\nexport default connect(mapStateToProps, null)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './styles/History.css';\n\nexport class History extends React.Component {\n\n    componentDidMount() {\n        console.log(this.props.history);\n    };\n\n    render() {\n        const listHistory = this.props.history.map((elem, index) =>\n                <li key={index}>Item: {elem.item}, Connection: {elem.connection}, Result: {elem.result.toString()}</li>\n        );\n        return (\n            <div className={`history-component ${this.props.theme}`}>\n                {this.props.history.length ? <h1>Search history:</h1> : <h1>History is clear</h1>}\n                <ul>{listHistory}</ul>\n            </div>\n        )\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        theme: state.theme,\n        history: state.history\n    }\n};\n\nexport default connect(mapStateToProps)(History);\n","export async function ajaxSearch(title) {\n    try {\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n        const response = await fetch(proxyurl + 'https://pirateproxy.surf/api?url=/q.php?q=' + title.toString());\n        const data = await response.json();\n        if (data[0].name === \"No results returned\") return false;\n            else return true;\n    } catch (error) {\n        alert(error);\n    }\n};\n\nfunction imdbHelper(title) {\n    let imdbId = require('imdb-id');\n    return new Promise(async (resolve, reject) => {\n        try {\n            let result = await imdbId(title);\n            resolve(result);\n        } catch(error) {\n            reject(error);\n        }\n    });\n}\n\nexport async function imdbSearch(title) {\n        let imdbId = require('imdb-id');\n        let result = await imdbHelper(title);\n        return result;\n};\n\nexport async function nodeSearch(title) {\n    const response = await fetch('https://equinox-brook-push.glitch.me/api/movie?' + new URLSearchParams({title}));\n    const result = await response.json();\n    return result;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { appendToHistory, checkResult, updateResult } from '../actions/actions';\nimport './styles/Result.css';\nimport { ajaxSearch, imdbSearch, nodeSearch } from '../logic/tpbConnection'; \n\nexport class Result extends React.Component {\n\n    async componentDidMount() {\n        let response = null;\n        if (this.props.input === '') return;\n        switch(this.props.connection) {\n            case \"ajax\":\n                response = await ajaxSearch(this.props.input);\n                this.props.updateResult(response);\n                this.props.appendToHistory(this.props.input, this.props.connection, this.props.result\n);\n                this.props.checkResult(true);\n                break;\n            case \"imdb\":\n                try {\n                    let imdbId = await imdbSearch(this.props.input);\n                    response = await ajaxSearch(imdbId);\n                    this.props.updateResult(response);\n                } catch(error) {\n                    if (error === \"Movie not found\") this.props.updateResult(false);\n                    else console.log(error);\n                } finally {\n                    this.props.appendToHistory(this.props.input, this.props.connection, this.props.result);\n                    this.props.checkResult(true);\n                }\n                break;\n            case \"node\":\n                try {\n                    response = await nodeSearch(this.props.input);\n                    if (response.error) this.props.updateResult(false);\n                    else this.props.updateResult(true);\n                } catch(error) {\n                    console.log(error);\n                } finally {\n                    this.props.appendToHistory(this.props.input, this.props.connection, this.props.result);\n                    this.props.checkResult(true);\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        return (\n            <div className={`result-component ${this.props.theme}`}>\n                <ul>\n                    <li><b>Input:</b> {this.props.input}</li>\n                    <li><b>Connection:</b> {this.props.connection}</li>\n                    <li><b>Result:</b> {!this.props.input ? \"Error - provide a movie title\" : this.props.gotResult ? this.props.result.toString() : \"Connecting...\"}</li>\n                </ul>\n                {!this.props.input ? <i className=\"fas fa-times\"></i> : this.props.gotResult ? <i className=\"fas fa-check\"></i> : <i className=\"fas fa-spinner fa-spin\"></i>}\n            </div>\n        )\n    };\n};\n\nconst mapStateToProps = (state) => ({\n    input: state.input,\n    connection: state.connection,\n    theme: state.theme,\n    gotResult: state.gotResult,\n    result: state.result\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    appendToHistory: (item, connection, result) => dispatch(appendToHistory(item, connection, result)),\n    checkResult: (result) => dispatch(checkResult(result)),\n    updateResult: (result) => dispatch(updateResult(result))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { TOGGLE_THEME, SET_AJAX_REQUEST, SET_IMDB_REQUEST, SET_NODE_REQUEST, UPDATE_INPUT, TOGGLE_SIDEMENU, UPDATE_HISTORY, REQUEST, UPDATE_RESULT } from './actions';\n\nfunction theme(state = 'theme1', action) {\n    switch(action.type) {\n        case TOGGLE_THEME:\n            return action.theme;\n        default:\n            return state;\n    }\n};\n\nfunction connection(state = 'ajax', action) {\n    switch(action.type) {\n        case SET_AJAX_REQUEST:\n            return action.connection;\n        case SET_IMDB_REQUEST:\n            return action.connection;\n        case SET_NODE_REQUEST:\n            return action.connection;\n        default:\n            return state;\n    }\n};\n\nfunction input(state = '', action) {\n    switch(action.type) {\n        case UPDATE_INPUT:\n            return action.input;\n        default:\n            return state;\n    }\n};\n\nfunction sidemenuOpen(state = 'false', action) {\n    switch(action.type) {\n        case TOGGLE_SIDEMENU:\n            return action.sidemenuOpen;\n        default:\n            return state;\n    }\n};\n\nfunction history(state = [], action) {\n    switch(action.type) {\n        case UPDATE_HISTORY:\n            return [...state, {item: action.item.title, connection: action.item.connection, result: action.item.result}];\n        default:\n            return state;\n    }\n};\n\nfunction gotResult(state = false, action) {\n    switch(action.type) {\n        case REQUEST:\n            return action.gotResult;\n        default:\n            return state;\n    }\n};\n\nfunction result(state = null, action) {\n    switch(action.type) {\n        case UPDATE_RESULT:\n            return action.result;\n        default:\n            return state;\n    }\n};\n\nconst appReducer = combineReducers({input, connection, theme, sidemenuOpen, history, gotResult, result});\n\nexport default appReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './index.css';\nimport Header from './components/Header';\nimport Menu from './components/Menu';\nimport App from './components/App';\nimport Footer from './components/Footer';\nimport History from './components/History';\nimport Result from './components/Result';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport appReducer from './actions/reducers';\n\nconst initialState = {\n    input: '',\n    connection: 'ajax',\n    theme: 'theme1',\n    sidemenuOpen: false,\n    history: [],\n    gotResult: false,\n    result: null\n};\n\nconst store = createStore(appReducer, initialState);\n\nReactDOM.render(\n<Provider store={store}>\n  <React.StrictMode>\n    <Router>\n        <Switch>\n            <Route path=\"/history\">\n                <Header />\n                <Menu />\n                <History />\n                <Footer />\n            </Route>\n            <Route path=\"/result\">\n                <Header />\n                <Menu />\n                <Result />\n                <Footer />\n            </Route>\n            <Route path=\"/\">\n                <Header />\n                <Menu />\n                <App />\n                <Footer />\n            </Route>\n        </Switch>\n    </Router>\n  </React.StrictMode>\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}