{"version":3,"sources":["components/Header.js","components/Menu.js","actions/actions.js","components/App.js","components/Footer.js","components/History.js","components/Result.js","logic/tpbConnection.js","serviceWorker.js","actions/reducers.js","index.js"],"names":["Header","className","this","props","theme","React","Component","connect","state","Menu","toggleMenu","sidemenuOpen","document","getElementsByClassName","style","width","marginLeft","closeSidemenu","openSidemenu","toggleTheme","toggleDarkTheme","body","id","toggleLightTheme","to","onClick","bind","dispatch","type","App","event","updateInput","target","value","setAjaxRequest","preventDefault","history","push","onSubmit","submitForm","htmlFor","name","input","onChange","handleInputChange","required","checked","connection","setImdbRequest","setNodeRequest","withRouter","Footer","History","console","log","listHistory","map","elem","index","key","item","result","toString","length","Result","fetch","then","response","json","data","appendToHistory","title","Boolean","window","location","hostname","match","appReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","path","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fb862b5e.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport './styles/Header.css';\n\nexport class Header extends React.Component {\n    render() {\n      return (\n        <div className={`Header-component ${this.props.theme}`}>\n          <header>\n            Simple TPB Movie Search Application\n          <hr />\n          </header>\n        </div>\n      );\n    };\n};\n\nconst mapStateToProps = (state) => ({\n    theme: state.theme\n});\n\nexport default connect(mapStateToProps, null)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { toggleLightTheme, toggleDarkTheme, openSidemenu, closeSidemenu } from '../actions/actions';\nimport './styles/Menu.css';\n\nexport class Menu extends React.Component {\n    toggleMenu = () => {\n        switch(this.props.sidemenuOpen) {\n            case true:\n                document.getElementsByClassName(\"sidebar\")[0].style.width = \"0\";\n                document.getElementsByClassName(\"openbtn\")[0].style.marginLeft = \"0%\";\n                this.props.closeSidemenu();\n                break;\n            case false:\n                document.getElementsByClassName(\"sidebar\")[0].style.width = \"20%\";\n                document.getElementsByClassName(\"openbtn\")[0].style.marginLeft = \"20%\";\n                this.props.openSidemenu();\n                break;\n            default:\n                break;\n        }\n    };\n    \n    toggleTheme = () => {\n        switch(this.props.theme) {\n            case \"theme1\":\n                this.props.toggleDarkTheme();\n                document.body.id = \"theme2\";\n                break;\n            case \"theme2\":\n                this.props.toggleLightTheme();\n                document.body.id = \"theme1\";\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n      return (\n        <div className={`Menu-component ${this.props.theme}`}>\n          <div className=\"colorbar\">\n          </div>\n            <div className=\"sidebar\">\n                <nav>\n                    <Link to=\"/\">Homepage</Link>\n                    <Link to=\"/history\">Search history</Link>\n                </nav>\n                <button className=\"themebtn\" onClick={this.toggleTheme.bind(this)}>{this.props.theme === \"theme1\" ? \"Dark Theme\" : \"Light Theme\"}</button>\n            </div>\n            <div className=\"Menu-button\">\n                <button className=\"openbtn\" onClick={this.toggleMenu.bind(this)}>&#9776;</button>\n            </div>\n        </div>\n      );\n    };\n};\n\nconst mapStateToProps = (state) => ({\n    theme: state.theme,\n    sidemenuOpen: state.sidemenuOpen,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    openSidemenu: () => dispatch(openSidemenu()),\n    closeSidemenu: () => dispatch(closeSidemenu()),\n    toggleLightTheme: () => dispatch(toggleLightTheme()),\n    toggleDarkTheme: () => dispatch(toggleDarkTheme())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\n","export const TOGGLE_THEME = 'TOGGLE_THEME';\nexport const SET_AJAX_REQUEST = 'SET_AJAX_REQUEST';\nexport const SET_IMDB_REQUEST = 'SET_IMDB_REQUEST';\nexport const SET_NODE_REQUEST = 'SET_NODE_REQUEST';\nexport const UPDATE_INPUT = 'UPDATE_INPUT';\nexport const TOGGLE_SIDEMENU = 'TOGGLE_SIDEMENU';\nexport const UPDATE_HISTORY = 'UPDATE_HISTORY';\n\nexport function toggleLightTheme() {\n    return { type: TOGGLE_THEME, theme: 'theme1' };\n};\n\nexport function toggleDarkTheme() {\n    return { type: TOGGLE_THEME, theme: 'theme2' };\n};\n\nexport function setAjaxRequest() {\n    return { type: SET_AJAX_REQUEST, connection: 'ajax' };\n};\n\nexport function setImdbRequest() {\n    return { type: SET_IMDB_REQUEST, connection: 'imdb' };\n};\n\nexport function setNodeRequest() {\n    return { type: SET_NODE_REQUEST, connection: 'node' };\n};\n\nexport function updateInput(text) {\n    return { type: UPDATE_INPUT, input: text };\n};\n\nexport function openSidemenu() {\n    return { type: TOGGLE_SIDEMENU, sidemenuOpen: true };\n};\n\nexport function closeSidemenu() {\n    return { type: TOGGLE_SIDEMENU, sidemenuOpen: false };\n};\n\nexport function appendToHistory(title, connection, result) {\n    return { type: UPDATE_HISTORY, item: {title, connection, result} };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport './styles/App.css';\nimport { setAjaxRequest, setImdbRequest, setNodeRequest, updateInput } from '../actions/actions.js';\n\nexport class App extends React.Component {\n    handleInputChange(event) {\n        this.props.updateInput(event.target.value)\n    };\n    \n    componentDidMount() {\n        document.body.id = this.props.theme;\n        this.props.updateInput(\"\");\n        this.props.setAjaxRequest();\n    };\n\n    submitForm(event) {\n        event.preventDefault();\n        this.props.history.push('/result');\n    };\n    render() {\n      return (\n        <div className={`App ${this.props.theme}`}>\n          <form onSubmit={this.submitForm.bind(this)}>\n            <label htmlFor=\"input\">Movie title:</label>\n            <input id=\"input\" type=\"text\" name=\"movietitle\" value={this.props.input} onChange={this.handleInputChange.bind(this)} required></input>\n          <div className=\"radios\">\n                <label id=\"connectionTitle\">Connection type:</label>\n                <div className=\"item\">\n                    <label htmlFor=\"ajax\" className=\"radioLabel\">AJAX</label>\n                    <input type=\"radio\" id=\"ajax\" name=\"connectionType\" value=\"ajax\" onChange={this.props.setAjaxRequest} checked={this.props.connection === 'ajax'}></input>\n                </div>\n                <div className=\"item\">\n                    <label htmlFor=\"imdb\" className=\"radioLabel\">AJAX + IMDB ID</label>\n                    <input type=\"radio\" id=\"imdb\" name=\"connectionType\" value=\"imdb\" onChange={this.props.setImdbRequest} checked={this.props.connection === 'imdb'}></input>\n                </div>\n                <div className=\"item\">\n                    <label htmlFor=\"node\" className=\"radioLabel\">NODE.js + IMDB ID</label>\n                    <input type=\"radio\" id=\"node\" name=\"connectionType\" value=\"node\" onChange={this.props.setNodeRequest} checked={this.props.connection === 'node'}></input>\n                </div>\n            </div>\n            <input id=\"submitbtn\" type=\"submit\" value=\"Search\"></input>\n          </form>\n        </div>\n      );\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        input: state.input,\n        connection: state.connection,\n        theme: state.theme\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    setAjaxRequest: () => dispatch(setAjaxRequest()),\n    setImdbRequest: () => dispatch(setImdbRequest()),\n    setNodeRequest: () => dispatch(setNodeRequest()),\n    updateInput: (input) => dispatch(updateInput(input))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './styles/Footer.css';\n\nexport class Footer extends React.Component {\n    render() {\n        return (\n            <div className={`Footer-component ${this.props.theme}`}>\n                <footer>\n                    <hr />\n                    Made by kushiji with React 2020\n                </footer>\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    theme: state.theme\n});\n\nexport default connect(mapStateToProps, null)(Footer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './styles/History.css';\n\nexport class History extends React.Component {\n\n    componentDidMount() {\n        console.log(this.props.history);\n    };\n\n    render() {\n        const listHistory = this.props.history.map((elem, index) =>\n                <li key={index}>Item: {elem.item}, Connection: {elem.connection}, Result: {elem.result.toString()}</li>\n        );\n        return (\n            <div className={`history-component ${this.props.theme}`}>\n                {this.props.history.length ? <h1>Search history:</h1> : <h1>History is clear</h1>}\n                <ul>{listHistory}</ul>\n            </div>\n        )\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        theme: state.theme,\n        history: state.history\n    }\n};\n\nexport default connect(mapStateToProps)(History);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { appendToHistory } from '../actions/actions';\nimport './styles/Result.css';\nimport { ajaxSearch } from '../logic/tpbConnection'; \n\nexport class Result extends React.Component {\n\n    componentDidMount() {\n        ajaxSearch(\"cokolwiek\");\n        this.props.appendToHistory(this.props.input, this.props.connection, true);    \n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Input: {this.props.input}</h1>\n                <h1>Connection: {this.props.connection}</h1>\n                <h1>Result: true</h1>\n            </div>\n        )\n    };\n};\n\nconst mapStateToProps = (state) => ({\n    input: state.input,\n    connection: state.connection\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    appendToHistory: (item, connection, result) => dispatch(appendToHistory(item, connection, result))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);\n","export function ajaxSearch(title) {\n    fetch('https://pirateproxy.surf/api?url=/q.php?q=' + title.toString())\n        .then(response => response.json())\n        .then(data => console.log(data));\n};\n\nexport function imdbSearch(title) {\n\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { TOGGLE_THEME, SET_AJAX_REQUEST, SET_IMDB_REQUEST, SET_NODE_REQUEST, UPDATE_INPUT, TOGGLE_SIDEMENU, UPDATE_HISTORY } from './actions';\n\nfunction theme(state = 'theme1', action) {\n    switch(action.type) {\n        case TOGGLE_THEME:\n            return action.theme;\n        default:\n            return state;\n    }\n};\n\nfunction connection(state = 'ajax', action) {\n    switch(action.type) {\n        case SET_AJAX_REQUEST:\n            return action.connection;\n        case SET_IMDB_REQUEST:\n            return action.connection;\n        case SET_NODE_REQUEST:\n            return action.connection;\n        default:\n            return state;\n    }\n};\n\nfunction input(state = '', action) {\n    switch(action.type) {\n        case UPDATE_INPUT:\n            return action.input;\n        default:\n            return state;\n    }\n};\n\nfunction sidemenuOpen(state = 'false', action) {\n    switch(action.type) {\n        case TOGGLE_SIDEMENU:\n            return action.sidemenuOpen;\n        default:\n            return state;\n    }\n};\n\nfunction history(state = [], action) {\n    switch(action.type) {\n        case UPDATE_HISTORY:\n            return [...state, {item: action.item.title, connection: action.item.connection, result: action.item.result}];\n        default:\n            return state;\n    }\n};\n\nconst appReducer = combineReducers({input, connection, theme, sidemenuOpen, history});\n\nexport default appReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './index.css';\nimport Header from './components/Header';\nimport Menu from './components/Menu';\nimport App from './components/App';\nimport Footer from './components/Footer';\nimport History from './components/History';\nimport Result from './components/Result';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport appReducer from './actions/reducers';\n\nconst initialState = {\n    input: '',\n    connection: 'ajax',\n    theme: 'theme1',\n    sidemenuOpen: false,\n    history: []\n};\n\nconst store = createStore(appReducer, initialState);\n\nReactDOM.render(\n<Provider store={store}>\n  <React.StrictMode>\n    <Router>\n    <Switch>\n        <Route path=\"/history\">\n            <Header />\n            <Menu />\n            <History />\n            <Footer />\n        </Route>\n        <Route path=\"/result\">\n            <Header />\n            <Menu />\n            <Result />\n            <Footer />\n        </Route>\n        <Route path=\"/\">\n            <Header />\n            <Menu />\n            <App />\n            <Footer />\n        </Route>\n    </Switch>\n    </Router>\n  </React.StrictMode>\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}